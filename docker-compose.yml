version: '3.8'

services:
  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: fut-manager-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - fut-manager-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fut-manager-frontend
    ports:
      - "8081:8081"
    depends_on:
      - gateway-service
    networks:
      - fut-manager-network
    restart: unless-stopped

  # Gateway Service - API Gateway
  gateway-service:
    build:
      context: .
      dockerfile: ./services/gateway-service/Dockerfile
    container_name: fut-manager-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:3001
      - TEAM_SERVICE_URL=http://team-service:3002
      - SANCTION_SERVICE_URL=http://sanction-service:3003
      - CORS_ORIGIN=http://localhost:5173,http://frontend
    depends_on:
      - redis
      - auth-service
      - team-service
      - sanction-service
    networks:
      - fut-manager-network
    restart: unless-stopped

  # Auth Service - Autenticaci贸n y Autorizaci贸n
  auth-service:
    build:
      context: .
      dockerfile: ./services/auth-service/Dockerfile
    container_name: fut-manager-auth
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    depends_on:
      - redis
    networks:
      - fut-manager-network
    restart: unless-stopped

  # Team Service - Gesti贸n de Equipos y Jugadores
  team-service:
    build:
      context: .
      dockerfile: ./services/team-service/Dockerfile
    container_name: fut-manager-team
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=development
      - PORT=3002
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - fut-manager-network
    restart: unless-stopped

  # Sanction Service - Gesti贸n de Sanciones  
  sanction-service:
    build:
      context: .
      dockerfile: ./services/sanction-service/Dockerfile
    container_name: fut-manager-sanction
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=development
      - PORT=3003
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - fut-manager-network
    restart: unless-stopped


  # Nginx - Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: fut-manager-nginx
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - gateway-service
      - frontend
    networks:
      - fut-manager-network
    restart: unless-stopped


networks:
  fut-manager-network:
    driver: bridge

volumes:
  redis_data:
